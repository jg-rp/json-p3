"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3206],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,f=p["".concat(i,".").concat(d)]||p[d]||m[d]||o;return n?a.createElement(f,l(l({ref:t},c),{},{components:n})):a.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:r,l[1]=s;for(var u=2;u<o;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8245:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>P,contentTitle:()=>J,default:()=>q,frontMatter:()=>w,metadata:()=>T,toc:()=>E});var a=n(7462),r=n(7294),o=n(3905),l=n(6010),s=n(2466),i=n(6550),u=n(1980),c=n(7392),p=n(12);function m(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??m(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function f(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=d(e),[l,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!f({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[i,u]=h({queryString:n,groupId:a}),[c,m]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,p.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),b=(()=>{const e=i??c;return f({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{b&&s(b)}),[b]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!f({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),m(e)}),[u,m,o]),tabValues:o}}var y=n(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:t,block:n,selectedValue:o,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,s.o5)(),m=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==o&&(p(t),i(a))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:m},s,{className:(0,l.Z)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":o===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=b(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",g.tabList)},r.createElement(k,(0,a.Z)({},e,t)),r.createElement(v,(0,a.Z)({},e,t)))}function S(e){const t=(0,y.Z)();return r.createElement(N,(0,a.Z)({key:String(t)},e))}const O={tabItem:"tabItem_Ymn6"};function j(e){let{children:t,hidden:n,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,l.Z)(O.tabItem,a),hidden:n},t)}const w={slug:"/"},J="JSON P3",T={unversionedId:"intro",id:"intro",title:"JSON P3",description:"JSON P3 implements JSONPath following the IETF JSONPath draft specification, JSON Pointer described by RFC 6901, and JSON Patch described by RFC 6902.",source:"@site/docs/intro.mdx",sourceDirName:".",slug:"/",permalink:"/json-p3/",draft:!1,editUrl:"https://github.com/jg-rp/json-p3/tree/docs/docs/intro.mdx",tags:[],version:"current",frontMatter:{slug:"/"},sidebar:"docsSidebar",next:{title:"Quick start",permalink:"/json-p3/quick-start"}},P={},E=[{value:"Install",id:"install",level:2},{value:"Node.js",id:"nodejs",level:3},{value:"Browser",id:"browser",level:3},{value:"Example",id:"example",level:2}],I={toc:E},x="wrapper";function q(e){let{components:t,...n}=e;return(0,o.kt)(x,(0,a.Z)({},I,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"json-p3"},"JSON P3"),(0,o.kt)("p",null,"JSON P3 implements JSONPath following the ",(0,o.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/draft-ietf-jsonpath-base-20"},"IETF JSONPath draft")," specification, JSON Pointer described by ",(0,o.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc6901"},"RFC 6901"),", and JSON Patch described by ",(0,o.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc6902"},"RFC 6902"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/json-p3/quick-start#jsonpath"},"JSONPath"))," is a mini language for selecting values from JSON-like data. A JSONPath query has the potential to return multiple values from a data structure, along with their locations. This implementation is non-evaluating and read-only. We strictly follow the ",(0,o.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/draft-ietf-jsonpath-base-20"},"IETF JSONPath draft"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/json-p3/quick-start#json-pointer"},"JSON Pointer"))," is a syntax for targeting a single value in JSON-like data. JSON Pointers can be ",(0,o.kt)("em",{parentName:"p"},"resolved")," against data to retrieve the value, or used as part of a JSON Patch operation."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/json-p3/quick-start#json-patch"},"JSON Patch"))," is a standard for describing update operations to perform on JSON-like data. You can ",(0,o.kt)("em",{parentName:"p"},"apply")," a patch to ",(0,o.kt)("em",{parentName:"p"},"add"),", ",(0,o.kt)("em",{parentName:"p"},"remove"),", ",(0,o.kt)("em",{parentName:"p"},"replace"),", ",(0,o.kt)("em",{parentName:"p"},"copy")," and ",(0,o.kt)("em",{parentName:"p"},"move")," values within a JSON document."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"We use the term ",(0,o.kt)("em",{parentName:"p"},"JSON-like data")," to describe arbitrary, possibly nested, JavaScript arrays and objects, plus primitive strings, numbers, booleans and ",(0,o.kt)("inlineCode",{parentName:"p"},"null"),", as you might expect from ",(0,o.kt)("inlineCode",{parentName:"p"},"JSON.parse()"),". When traversing JSON-like data, we only resolve an object's direct properties, and the ",(0,o.kt)("inlineCode",{parentName:"p"},"length")," property of arrays and strings is ignored.")),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)("h3",{id:"nodejs"},"Node.js"),(0,o.kt)("p",null,"Install JSON P3 using your preferred project manager:"),(0,o.kt)(S,{groupId:"js-package",mdxType:"Tabs"},(0,o.kt)(j,{value:"npm",label:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save json-p3\n"))),(0,o.kt)(j,{value:"yarn",label:"yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add json-p3\n"))),(0,o.kt)(j,{value:"pnpm",label:"pnpm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pnpm add json-p3\n")))),(0,o.kt)("p",null,"And import the module:"),(0,o.kt)(S,{groupId:"js-modules",mdxType:"Tabs"},(0,o.kt)(j,{value:"esm",label:"ESM",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { query } from "json-p3";\n'))),(0,o.kt)(j,{value:"cjs",label:"CJS",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const { query } = require("json-p3");\n')))),(0,o.kt)("h3",{id:"browser"},"Browser"),(0,o.kt)("p",null,"Download and include JSON P3 in a script tag:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<script src="path/to/json-p3.iife.min.js"><\/script>\n<script>\n  const data = {\n    players: [{ name: "Sue" }, { name: "John" }, { name: "Sally" }],\n    visitors: [{ name: "Brian" }, { name: "Roy" }],\n  };\n  const nodes = json_p3.query("$..name");\n  console.log(nodes.values());\n  // [ \'Sue\', \'John\', \'Sally\', \'Brian\', \'Roy\' ]\n<\/script>\n')),(0,o.kt)("p",null,"Or use a CDN"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://cdn.jsdelivr.net/npm/json-p3@0.1.0/dist/json-p3.iife.min.js"><\/script>\n<script>\n  const data = {\n    players: [{ name: "Sue" }, { name: "John" }, { name: "Sally" }],\n    visitors: [{ name: "Brian" }, { name: "Roy" }],\n  };\n  const nodes = json_p3.query("$..name");\n  console.log(nodes.values());\n  // [ \'Sue\', \'John\', \'Sally\', \'Brian\', \'Roy\' ]\n<\/script>\n')),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"This example uses a JSONPath query to find players with a low score, converts each node from the query result to a ",(0,o.kt)("inlineCode",{parentName:"p"},"JSONPointer"),", then uses that pointer to build a ",(0,o.kt)("inlineCode",{parentName:"p"},"JSONPatch")," that, when applied to our original data, boosts each player's score by 20."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { query, JSONPatch } from "json-p3";\n\nconst data = {\n  teams: [\n    {\n      name: "A Team",\n      players: [\n        {\n          name: "Sue",\n          score: 110,\n        },\n        {\n          name: "John",\n          score: 86,\n        },\n      ],\n    },\n    {\n      name: "B Team",\n      players: [\n        {\n          name: "Sally",\n          score: 84,\n        },\n        {\n          name: "Jane",\n          score: 55,\n        },\n      ],\n    },\n  ],\n};\n\nconst nodes = query("$..players[?@.score < 90]", data);\nconst patch = new JSONPatch();\n\nfor (const node of nodes) {\n  const pointer = node.toPointer().join("score");\n  patch.replace(pointer, node.value.score + 20);\n}\n\npatch.apply(data);\nconsole.log(JSON.stringify(data, undefined, "  "));\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="output"',title:'"output"'},'{\n  "teams": [\n    {\n      "name": "A Team",\n      "players": [\n        {\n          "name": "Sue",\n          "score": 110\n        },\n        {\n          "name": "John",\n          "score": 106\n        }\n      ]\n    },\n    {\n      "name": "B Team",\n      "players": [\n        {\n          "name": "Sally",\n          "score": 104\n        },\n        {\n          "name": "Jane",\n          "score": 75\n        }\n      ]\n    }\n  ]\n}\n')))}q.isMDXComponent=!0}}]);