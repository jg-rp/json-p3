"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4701],{7160:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var t=s(5893),r=s(1151);const i={},o="Extra JSONPath Syntax",a={id:"guides/jsonpath-extra",title:"Extra JSONPath Syntax",description:"_New in version 1.2.0_",source:"@site/docs/guides/jsonpath-extra.md",sourceDirName:"guides",slug:"/guides/jsonpath-extra",permalink:"/json-p3/guides/jsonpath-extra",draft:!1,unlisted:!1,editUrl:"https://github.com/jg-rp/json-p3/tree/docs/docs/guides/jsonpath-extra.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"JSONPath Query Syntax",permalink:"/json-p3/guides/jsonpath-syntax"},next:{title:"JSONPath Functions",permalink:"/json-p3/guides/jsonpath-functions"}},c={},d=[{value:"Keys selector",id:"keys-selector",level:2},{value:"Custom keys token",id:"custom-keys-token",level:3},{value:"Current key identifier",id:"current-key-identifier",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"extra-jsonpath-syntax",children:"Extra JSONPath Syntax"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"New in version 1.2.0"})})}),"\n",(0,t.jsxs)(n.p,{children:["JSON P3 includes some extra, non-standard JSONPath syntax that is disabled by default. Setting the ",(0,t.jsx)(n.a,{href:"/json-p3/api/namespaces/jsonpath#jsonpathenvironmentoptions",children:(0,t.jsx)(n.code,{children:"strict"})})," option to ",(0,t.jsx)(n.code,{children:"false"})," when instantiating a ",(0,t.jsx)(n.a,{href:"/json-p3/api/classes/jsonpath.JSONPathEnvironment",children:(0,t.jsx)(n.code,{children:"JSONPathEnvironment"})})," will enable all non-standard syntax."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'import { JSONPathEnvironment } from "json-p3";\n\nconst env = new JSONPathEnvironment({ strict: false });\nvalues = env.query("$.some.path", data).values();\n'})}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsx)(n.p,{children:"Non-standard features are subject to change if:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"conflicting syntax is included in a future JSONPath standard or draft standard."}),"\n",(0,t.jsx)(n.li,{children:"an overwhelming consensus from the JSONPath community emerges that differs from our choices."}),"\n"]})]}),"\n",(0,t.jsx)(n.h2,{id:"keys-selector",children:"Keys selector"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"~"})," is the ",(0,t.jsx)(n.em,{children:"keys"})," selector, selecting property names from objects. The keys selector can be used in a bracketed selection (",(0,t.jsx)(n.code,{children:"[~]"}),") or in its shorthand form (",(0,t.jsx)(n.code,{children:".~"}),")."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"$.users[?@.score == 86].~\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Output using example data from the ",(0,t.jsx)(n.a,{href:"/json-p3/guides/jsonpath-syntax",children:"previous page"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'["name", "score", "admin"]\n'})}),"\n",(0,t.jsx)(n.p,{children:"When applied to an array or primitive value, the keys selector select nothing."}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Creating a ",(0,t.jsx)(n.a,{href:"/json-p3/guides/json-pointer",children:"JSON Pointer"})," from a ",(0,t.jsx)(n.a,{href:"/json-p3/api/classes/jsonpath.JSONPathNode#topointer",children:(0,t.jsx)(n.code,{children:"JSONPathNode"})})," built using the keys selector will result in an unresolvable pointer. JSON Pointer does not support pointing to property names."]})}),"\n",(0,t.jsx)(n.h3,{id:"custom-keys-token",children:"Custom keys token"}),"\n",(0,t.jsxs)(n.p,{children:["The token representing the keys selector can be customized by setting the ",(0,t.jsx)(n.code,{children:"keysPattern"})," option on a ",(0,t.jsx)(n.code,{children:"JSONPathEnvironment"})," to a regular expression with the sticky flag set. For example, to change the keys selector to be ",(0,t.jsx)(n.code,{children:"*~"})," instead of ",(0,t.jsx)(n.code,{children:"~"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'import { JSONPathEnvironment } from "json-p3";\n\nconst env = new JSONPathEnvironment({ strict: false, keysPattern: /\\*~/y });\n'})}),"\n",(0,t.jsx)(n.h2,{id:"current-key-identifier",children:"Current key identifier"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"#"})," is the ",(0,t.jsx)(n.em,{children:"current key"})," identifier. ",(0,t.jsx)(n.code,{children:"#"})," will be the property name of an object or index of an array corresponding to ",(0,t.jsx)(n.code,{children:"@"})," in a filter expression."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"$.users[?# > 1]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Again, using example data from the ",(0,t.jsx)(n.a,{href:"/json-p3/guides/jsonpath-syntax",children:"previous page"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "name": "Sally",\n    "score": 84,\n    "admin": false\n  },\n  {\n    "name": "Jane",\n    "score": 55\n  }\n]\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>o});var t=s(7294);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);