"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7894],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>u});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var i=n.createContext({}),c=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},l=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(a),h=o,u=m["".concat(i,".").concat(h)]||m[h]||d[h]||r;return a?n.createElement(u,p(p({ref:t},l),{},{components:a})):n.createElement(u,p({ref:t},l))}));function u(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,p=new Array(r);p[0]=h;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[m]="string"==typeof e?e:o,p[1]=s;for(var c=2;c<r;c++)p[c]=a[c];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},5316:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=a(7462),o=(a(7294),a(3905));const r={},p="JSON Patch",s={unversionedId:"guides/json-patch",id:"guides/json-patch",title:"JSON Patch",description:"JSON Patch (RFC 6902) is a standard for describing update operations to perform on JSON-like data. Each operation includes, at least, an op string and a path, which is a JSON Pointer.",source:"@site/docs/guides/json-patch.md",sourceDirName:"guides",slug:"/guides/json-patch",permalink:"/json-p3/guides/json-patch",draft:!1,editUrl:"https://github.com/jg-rp/json-p3/tree/docs/docs/guides/json-patch.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"JSON Pointer",permalink:"/json-p3/guides/json-pointer"}},i={},c=[{value:"Builder API",id:"builder-api",level:2},{value:"<code>add()</code>",id:"add",level:3},{value:"<code>remove()</code>",id:"remove",level:3},{value:"<code>replace()</code>",id:"replace",level:3},{value:"<code>move()</code>",id:"move",level:3},{value:"<code>copy()</code>",id:"copy",level:3},{value:"<code>test()</code>",id:"test",level:3}],l={toc:c},m="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(m,(0,n.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"json-patch"},"JSON Patch"),(0,o.kt)("p",null,"JSON Patch (",(0,o.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc6902"},"RFC 6902"),") is a standard for describing update operations to perform on JSON-like data. Each operation includes, at least, an ",(0,o.kt)("inlineCode",{parentName:"p"},"op")," string and a ",(0,o.kt)("inlineCode",{parentName:"p"},"path"),", which is a ",(0,o.kt)("a",{parentName:"p",href:"/json-p3/guides/json-pointer"},"JSON Pointer"),"."),(0,o.kt)("p",null,"Use ",(0,o.kt)("a",{parentName:"p",href:"/json-p3/api/namespaces/jsonpatch#apply"},(0,o.kt)("inlineCode",{parentName:"a"},"jsonpatch.apply(ops, data)"))," to apply ",(0,o.kt)("em",{parentName:"p"},"ops")," to ",(0,o.kt)("em",{parentName:"p"},"data"),", where ",(0,o.kt)("em",{parentName:"p"},"ops")," should be an array of ",(0,o.kt)("a",{parentName:"p",href:"/json-p3/api/namespaces/jsonpatch#opobject"},(0,o.kt)("inlineCode",{parentName:"a"},"OpObject"),"s"),", as per RFC 6902. Patch operation are applied sequentially and, unless the target JSON document's root value is replaced, ",(0,o.kt)("strong",{parentName:"p"},"data is modified in place"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { jsonpatch } from "json-p3";\n\nconst ops = [\n  { op: "add", path: "/some/foo", value: { foo: {} } },\n  { op: "add", path: "/some/foo", value: { bar: [] } },\n  { op: "copy", from: "/some/other", path: "/some/foo/else" },\n  { op: "add", path: "/some/foo/bar/-", value: 1 },\n];\n\nconst data = { some: { other: "thing" } };\njsonpatch.apply(ops, data);\nconsole.log(data);\n// { some: { other: \'thing\', foo: { bar: [Array], else: \'thing\' } } }\n')),(0,o.kt)("p",null,"Use the ",(0,o.kt)("a",{parentName:"p",href:"/json-p3/api/classes/jsonpatch.JSONPatch"},(0,o.kt)("inlineCode",{parentName:"a"},"JSONPatch"))," constructor to create a patch for repeated application."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { JSONPatch } from "json-p3";\n\nconst patch = new JSONPatch([\n  { op: "add", path: "/some/foo", value: { foo: {} } },\n  { op: "add", path: "/some/foo", value: { bar: [] } },\n  { op: "copy", from: "/some/other", path: "/some/foo/else" },\n  { op: "add", path: "/some/foo/bar/-", value: 1 },\n]);\n\nconst data = { some: { other: "thing" } };\npatch.apply(data);\nconsole.log(data);\n// { some: { other: \'thing\', foo: { bar: [Array], else: \'thing\' } } }\n')),(0,o.kt)("h2",{id:"builder-api"},"Builder API"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/json-p3/api/classes/jsonpatch.JSONPatch"},(0,o.kt)("inlineCode",{parentName:"a"},"JSONPatch"))," implements a builder interface for constructing JSON Patch documents. Each of the following methods appends an operation to the patch and returns the patch instance, so method calls can be chained."),(0,o.kt)("h3",{id:"add"},(0,o.kt)("inlineCode",{parentName:"h3"},"add()")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/json-p3/api/classes/jsonpatch.JSONPatch#add"},(0,o.kt)("inlineCode",{parentName:"a"},"JSONPatch.add(pointer, value)"))," appends an ",(0,o.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc6902#section-4.1"},(0,o.kt)("em",{parentName:"a"},"add"))," operation to the patch. ",(0,o.kt)("em",{parentName:"p"},"pointer")," can be a string following RFC 6901 or an instance of ",(0,o.kt)("a",{parentName:"p",href:"/json-p3/api/classes/jsonpointer.JSONPointer"},(0,o.kt)("inlineCode",{parentName:"a"},"JSONPointer")),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { JSONPatch } from "json-p3";\n\nconst patch = new JSONPatch().add("/some/foo", { foo: [] });\nconsole.log(JSON.stringify(patch.toArray(), undefined, "  "));\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="output"',title:'"output"'},'[\n  {\n    "op": "add",\n    "path": "/some/foo",\n    "value": {\n      "foo": []\n    }\n  }\n]\n')),(0,o.kt)("h3",{id:"remove"},(0,o.kt)("inlineCode",{parentName:"h3"},"remove()")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/json-p3/api/classes/jsonpatch.JSONPatch#add"},(0,o.kt)("inlineCode",{parentName:"a"},"JSONPatch.remove(pointer)"))," appends an ",(0,o.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc6902#section-4.2"},(0,o.kt)("em",{parentName:"a"},"remove"))," operation to the patch. ",(0,o.kt)("em",{parentName:"p"},"pointer")," can be a string following RFC 6901 or an instance of ",(0,o.kt)("a",{parentName:"p",href:"/json-p3/api/classes/jsonpointer.JSONPointer"},(0,o.kt)("inlineCode",{parentName:"a"},"JSONPointer")),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { JSONPatch } from "json-p3";\n\nconst patch = new JSONPatch().remove("/some/foo");\nconsole.log(JSON.stringify(patch.toArray(), undefined, "  "));\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="output"',title:'"output"'},'[\n  {\n    "op": "remove",\n    "path": "/some/foo"\n  }\n]\n')),(0,o.kt)("h3",{id:"replace"},(0,o.kt)("inlineCode",{parentName:"h3"},"replace()")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/json-p3/api/classes/jsonpatch.JSONPatch#add"},(0,o.kt)("inlineCode",{parentName:"a"},"JSONPatch.replace(pointer, value)"))," appends an ",(0,o.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc6902#section-4.3"},(0,o.kt)("em",{parentName:"a"},"replace"))," operation to the patch. ",(0,o.kt)("em",{parentName:"p"},"pointer")," can be a string following RFC 6901 or an instance of ",(0,o.kt)("a",{parentName:"p",href:"/json-p3/api/classes/jsonpointer.JSONPointer"},(0,o.kt)("inlineCode",{parentName:"a"},"JSONPointer")),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { JSONPatch } from "json-p3";\n\nconst patch = new JSONPatch().replace("/some/foo", [1, 2, 3]);\nconsole.log(JSON.stringify(patch.toArray(), undefined, "  "));\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="output"',title:'"output"'},'[\n  {\n    "op": "replace",\n    "path": "/some/foo",\n    "value": [1, 2, 3]\n  }\n]\n')),(0,o.kt)("h3",{id:"move"},(0,o.kt)("inlineCode",{parentName:"h3"},"move()")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/json-p3/api/classes/jsonpatch.JSONPatch#add"},(0,o.kt)("inlineCode",{parentName:"a"},"JSONPatch.move(fromPointer, toPointer)"))," appends an ",(0,o.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc6902#section-4.4"},(0,o.kt)("em",{parentName:"a"},"move"))," operation to the patch. ",(0,o.kt)("em",{parentName:"p"},"fromPointer")," and ",(0,o.kt)("em",{parentName:"p"},"toPointer")," can be a string following RFC 6901 or an instance of ",(0,o.kt)("a",{parentName:"p",href:"/json-p3/api/classes/jsonpointer.JSONPointer"},(0,o.kt)("inlineCode",{parentName:"a"},"JSONPointer")),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { JSONPatch } from "json-p3";\n\nconst patch = new JSONPatch().move("/some/foo", "/other/bar");\nconsole.log(JSON.stringify(patch.toArray(), undefined, "  "));\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="output"',title:'"output"'},'[\n  {\n    "op": "move",\n    "from": "/some/foo",\n    "path": "/other/bar"\n  }\n]\n')),(0,o.kt)("h3",{id:"copy"},(0,o.kt)("inlineCode",{parentName:"h3"},"copy()")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/json-p3/api/classes/jsonpatch.JSONPatch#add"},(0,o.kt)("inlineCode",{parentName:"a"},"JSONPatch.copy(fromPointer, toPointer)"))," appends an ",(0,o.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc6902#section-4.5"},(0,o.kt)("em",{parentName:"a"},"copy"))," operation to the patch. ",(0,o.kt)("em",{parentName:"p"},"fromPointer")," and ",(0,o.kt)("em",{parentName:"p"},"toPointer")," can be a string following RFC 6901 or an instance of ",(0,o.kt)("a",{parentName:"p",href:"/json-p3/api/classes/jsonpointer.JSONPointer"},(0,o.kt)("inlineCode",{parentName:"a"},"JSONPointer")),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { JSONPatch } from "json-p3";\n\nconst patch = new JSONPatch().copy("/some/foo", "/other/bar");\nconsole.log(JSON.stringify(patch.toArray(), undefined, "  "));\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="output"',title:'"output"'},'[\n  {\n    "op": "copy",\n    "from": "/some/foo",\n    "path": "/other/bar"\n  }\n]\n')),(0,o.kt)("h3",{id:"test"},(0,o.kt)("inlineCode",{parentName:"h3"},"test()")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/json-p3/api/classes/jsonpatch.JSONPatch#add"},(0,o.kt)("inlineCode",{parentName:"a"},"JSONPatch.copy(pointer, value)"))," appends an ",(0,o.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc6902#section-4.6"},(0,o.kt)("em",{parentName:"a"},"test"))," operation to the patch. ",(0,o.kt)("em",{parentName:"p"},"pointer")," can be a string following RFC 6901 or an instance of ",(0,o.kt)("a",{parentName:"p",href:"/json-p3/api/classes/jsonpointer.JSONPointer"},(0,o.kt)("inlineCode",{parentName:"a"},"JSONPointer")),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'import { JSONPatch } from "json-p3";\n\nconst patch = new JSONPatch().test("/some/foo", "hello");\nconsole.log(JSON.stringify(patch.toArray(), undefined, "  "));\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="output"',title:'"output"'},'[\n  {\n    "op": "test",\n    "path": "/some/foo",\n    "value": "hello"\n  }\n]\n')))}d.isMDXComponent=!0}}]);